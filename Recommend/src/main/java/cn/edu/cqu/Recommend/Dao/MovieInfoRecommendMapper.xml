<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.edu.cqu.Recommend.Dao.MovieInfoRecommendMapper">
  <resultMap id="BaseResultMap" type="cn.edu.cqu.Recommend.Pojo.MovieInfoRecommend">
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="movie_id" jdbcType="INTEGER" property="movieId" />
    <result column="score" jdbcType="INTEGER" property="score" />
    <result column="movie_name" jdbcType="VARCHAR" property="movieName" />
    <result column="movie_rate" jdbcType="DECIMAL" property="movieRate" />
    <result column="movie_image" jdbcType="VARCHAR" property="movieImage" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="cn.edu.cqu.Recommend.Pojo.MovieInfoRecommendWithBLOBs">
    <result column="movie_type" jdbcType="LONGVARCHAR" property="movieType" />
    <result column="director" jdbcType="LONGVARCHAR" property="director" />
    <result column="actor" jdbcType="LONGVARCHAR" property="actor" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    user_id, movie_id, score, movie_name, movie_rate, movie_image
  </sql>
  <sql id="Blob_Column_List">
    movie_type, director, actor
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="cn.edu.cqu.Recommend.Pojo.MovieInfoRecommendExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from movie_info_recommend
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="cn.edu.cqu.Recommend.Pojo.MovieInfoRecommendExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from movie_info_recommend
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="cn.edu.cqu.Recommend.Pojo.MovieInfoRecommendExample">
    delete from movie_info_recommend
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.edu.cqu.Recommend.Pojo.MovieInfoRecommendWithBLOBs">
    insert into movie_info_recommend (user_id, movie_id, score, 
      movie_name, movie_rate, movie_image, 
      movie_type, director, actor
      )
    values (#{userId,jdbcType=INTEGER}, #{movieId,jdbcType=INTEGER}, #{score,jdbcType=INTEGER}, 
      #{movieName,jdbcType=VARCHAR}, #{movieRate,jdbcType=DECIMAL}, #{movieImage,jdbcType=VARCHAR}, 
      #{movieType,jdbcType=LONGVARCHAR}, #{director,jdbcType=LONGVARCHAR}, #{actor,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.edu.cqu.Recommend.Pojo.MovieInfoRecommendWithBLOBs">
    insert into movie_info_recommend
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="movieId != null">
        movie_id,
      </if>
      <if test="score != null">
        score,
      </if>
      <if test="movieName != null">
        movie_name,
      </if>
      <if test="movieRate != null">
        movie_rate,
      </if>
      <if test="movieImage != null">
        movie_image,
      </if>
      <if test="movieType != null">
        movie_type,
      </if>
      <if test="director != null">
        director,
      </if>
      <if test="actor != null">
        actor,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="movieId != null">
        #{movieId,jdbcType=INTEGER},
      </if>
      <if test="score != null">
        #{score,jdbcType=INTEGER},
      </if>
      <if test="movieName != null">
        #{movieName,jdbcType=VARCHAR},
      </if>
      <if test="movieRate != null">
        #{movieRate,jdbcType=DECIMAL},
      </if>
      <if test="movieImage != null">
        #{movieImage,jdbcType=VARCHAR},
      </if>
      <if test="movieType != null">
        #{movieType,jdbcType=LONGVARCHAR},
      </if>
      <if test="director != null">
        #{director,jdbcType=LONGVARCHAR},
      </if>
      <if test="actor != null">
        #{actor,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.edu.cqu.Recommend.Pojo.MovieInfoRecommendExample" resultType="java.lang.Long">
    select count(*) from movie_info_recommend
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update movie_info_recommend
    <set>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.movieId != null">
        movie_id = #{record.movieId,jdbcType=INTEGER},
      </if>
      <if test="record.score != null">
        score = #{record.score,jdbcType=INTEGER},
      </if>
      <if test="record.movieName != null">
        movie_name = #{record.movieName,jdbcType=VARCHAR},
      </if>
      <if test="record.movieRate != null">
        movie_rate = #{record.movieRate,jdbcType=DECIMAL},
      </if>
      <if test="record.movieImage != null">
        movie_image = #{record.movieImage,jdbcType=VARCHAR},
      </if>
      <if test="record.movieType != null">
        movie_type = #{record.movieType,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.director != null">
        director = #{record.director,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.actor != null">
        actor = #{record.actor,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update movie_info_recommend
    set user_id = #{record.userId,jdbcType=INTEGER},
      movie_id = #{record.movieId,jdbcType=INTEGER},
      score = #{record.score,jdbcType=INTEGER},
      movie_name = #{record.movieName,jdbcType=VARCHAR},
      movie_rate = #{record.movieRate,jdbcType=DECIMAL},
      movie_image = #{record.movieImage,jdbcType=VARCHAR},
      movie_type = #{record.movieType,jdbcType=LONGVARCHAR},
      director = #{record.director,jdbcType=LONGVARCHAR},
      actor = #{record.actor,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update movie_info_recommend
    set user_id = #{record.userId,jdbcType=INTEGER},
      movie_id = #{record.movieId,jdbcType=INTEGER},
      score = #{record.score,jdbcType=INTEGER},
      movie_name = #{record.movieName,jdbcType=VARCHAR},
      movie_rate = #{record.movieRate,jdbcType=DECIMAL},
      movie_image = #{record.movieImage,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>